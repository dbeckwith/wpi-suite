/*******************************************************************************
 * Copyright (c) 2013 -- WPI Suite
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 ******************************************************************************/
package edu.wpi.cs.wpisuitetng.modules.planningpoker.view.main;

import edu.wpi.cs.wpisuitetng.modules.planningpoker.controller.CurrentUserController;
import edu.wpi.cs.wpisuitetng.modules.planningpoker.controller.UserUpdateController;
import java.awt.Color;
import javax.swing.border.TitledBorder;
import javax.swing.border.LineBorder;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.JLabel;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JTextField;
import javax.swing.JButton;
import java.awt.Font;

/**
 * A panel for changing user preferences. Right now it only includes
 * notification methods, but other functionality may be added in the future.
 * 
 * @author Team 9
 * @version 1.0
 */
public class UserPreferencesPanel extends javax.swing.JPanel {
    
    // stops Eclipse from complaining
    private static final long serialVersionUID = 3565380843068717833L;
    
    private static UserPreferencesPanel instance;
    
    /**
     * Gets the single instance of the panel.
     * 
     * @return the instance of the UserPreferencesPanel
     */
    public static UserPreferencesPanel getPanel() {
        if (instance == null) {
            instance = new UserPreferencesPanel();
        }
        return instance;
    }
    
    /**
     * Creates new form UserPreferencesPanel
     */
    private UserPreferencesPanel() {
        setBackground(Color.WHITE);
        initComponents();
        if (CurrentUserController.getInstance().getUser() != null) {
            emailBox.setSelected(CurrentUserController.getInstance().getUser()
                    .isNotifyByEmail());
            imBox.setSelected(CurrentUserController.getInstance().getUser()
                    .isNotifyByIM());
            boolean b = emailBox.isSelected();
            lblEmail.setVisible(b);
            emailField.setVisible(b);
            saveButton.setVisible(b);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents() {
        
        notificationsPanel = new javax.swing.JPanel();
        notificationsPanel.setBorder(new TitledBorder(new LineBorder(new Color(
                184, 207, 229)), "Notification Options", TitledBorder.LEADING,
                TitledBorder.TOP, null, null));
        notificationsPanel.setBackground(Color.WHITE);
        emailBox = new javax.swing.JCheckBox();
        emailBox.setBackground(Color.WHITE);
        imBox = new javax.swing.JCheckBox();
        imBox.setBackground(Color.WHITE);
        
        emailBox.setText("Receive E-mail");
        emailBox.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailBoxActionPerformed(evt);
            }
        });
        
        imBox.setText("Receive IM");
        imBox.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imBoxActionPerformed(evt);
            }
        });
        
        lblEmail = new JLabel("Email: ");
        lblEmail.setFont(new Font("Tahoma", Font.BOLD, 11));
        
        emailField = new JTextField();
        emailField.setColumns(10);
        
        saveButton = new JButton("Save");
        
        final javax.swing.GroupLayout notificationsPanelLayout = new javax.swing.GroupLayout(
                notificationsPanel);
        notificationsPanelLayout.setHorizontalGroup(
            notificationsPanelLayout.createParallelGroup(Alignment.LEADING)
                .addGroup(notificationsPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(notificationsPanelLayout.createParallelGroup(Alignment.LEADING)
                        .addComponent(imBox)
                        .addGroup(notificationsPanelLayout.createSequentialGroup()
                            .addComponent(emailBox)
                            .addPreferredGap(ComponentPlacement.UNRELATED)
                            .addComponent(lblEmail)
                            .addPreferredGap(ComponentPlacement.RELATED)
                            .addComponent(emailField, GroupLayout.PREFERRED_SIZE, 133, GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(ComponentPlacement.RELATED)
                            .addComponent(saveButton)))
                    .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        notificationsPanelLayout.setVerticalGroup(
            notificationsPanelLayout.createParallelGroup(Alignment.LEADING)
                .addGroup(notificationsPanelLayout.createSequentialGroup()
                    .addContainerGap(19, Short.MAX_VALUE)
                    .addComponent(imBox)
                    .addPreferredGap(ComponentPlacement.RELATED)
                    .addGroup(notificationsPanelLayout.createParallelGroup(Alignment.BASELINE)
                        .addComponent(emailBox)
                        .addComponent(lblEmail)
                        .addComponent(emailField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addComponent(saveButton)))
        );
        notificationsPanel.setLayout(notificationsPanelLayout);
        
        final javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(notificationsPanel, 133, 400, GroupLayout.PREFERRED_SIZE) //manually change min to 133
                    .addContainerGap(85, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(notificationsPanel, GroupLayout.PREFERRED_SIZE, 86, GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(203, Short.MAX_VALUE))
        );
        setLayout(layout);
    }// </editor-fold>//GEN-END:initComponents
    
    private void emailBoxActionPerformed(java.awt.event.ActionEvent evt) {
        UserUpdateController.getInstance().setNotifyByEmail(
                emailBox.isSelected());
        boolean b = emailBox.isSelected();
        lblEmail.setVisible(b);
        emailField.setVisible(b);
        saveButton.setVisible(b);
    }
    
    private void imBoxActionPerformed(java.awt.event.ActionEvent evt) {
        UserUpdateController.getInstance().setNotifyByIM(imBox.isSelected());
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox emailBox;
    private javax.swing.JCheckBox imBox;
    private javax.swing.JPanel notificationsPanel;
    private JTextField emailField;
    private JLabel lblEmail;
    private JButton saveButton;
}
